IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [Generos] (
    [Id] int NOT NULL IDENTITY,
    [Nombre] nvarchar(40) NOT NULL,
    CONSTRAINT [PK_Generos] PRIMARY KEY ([Id])
);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231204215003_initial', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [Actores] (
    [Id] int NOT NULL IDENTITY,
    [Nombre] nvarchar(120) NOT NULL,
    [FechaNacimiento] datetime2 NOT NULL,
    [Foto] nvarchar(max) NULL,
    CONSTRAINT [PK_Actores] PRIMARY KEY ([Id])
);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231205002918_actores', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [Peliculas] (
    [Id] int NOT NULL IDENTITY,
    [Titulo] nvarchar(300) NOT NULL,
    [EnCines] bit NOT NULL,
    [FechaEstreno] datetime2 NOT NULL,
    [Poster] nvarchar(max) NULL,
    CONSTRAINT [PK_Peliculas] PRIMARY KEY ([Id])
);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231205225639_Peliculas', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [PeliculasActores] (
    [ActorId] int NOT NULL,
    [PeliculaId] int NOT NULL,
    [Personaje] nvarchar(max) NULL,
    [Orden] int NOT NULL,
    CONSTRAINT [PK_PeliculasActores] PRIMARY KEY ([ActorId], [PeliculaId]),
    CONSTRAINT [FK_PeliculasActores_Actores_ActorId] FOREIGN KEY ([ActorId]) REFERENCES [Actores] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_PeliculasActores_Peliculas_PeliculaId] FOREIGN KEY ([PeliculaId]) REFERENCES [Peliculas] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [PeliculasGeneros] (
    [GeneroId] int NOT NULL,
    [PeliculaId] int NOT NULL,
    CONSTRAINT [PK_PeliculasGeneros] PRIMARY KEY ([GeneroId], [PeliculaId]),
    CONSTRAINT [FK_PeliculasGeneros_Generos_GeneroId] FOREIGN KEY ([GeneroId]) REFERENCES [Generos] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_PeliculasGeneros_Peliculas_PeliculaId] FOREIGN KEY ([PeliculaId]) REFERENCES [Peliculas] ([Id]) ON DELETE CASCADE
);
GO

CREATE INDEX [IX_PeliculasActores_PeliculaId] ON [PeliculasActores] ([PeliculaId]);
GO

CREATE INDEX [IX_PeliculasGeneros_PeliculaId] ON [PeliculasGeneros] ([PeliculaId]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231206003228_PeliculasActores_PeliculasGeneros', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [SalasDeCine] (
    [Id] int NOT NULL IDENTITY,
    [Nombre] nvarchar(120) NOT NULL,
    CONSTRAINT [PK_SalasDeCine] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [PeliculasSalasDeCines] (
    [PeliculaId] int NOT NULL,
    [SalaDeCineId] int NOT NULL,
    CONSTRAINT [PK_PeliculasSalasDeCines] PRIMARY KEY ([PeliculaId], [SalaDeCineId]),
    CONSTRAINT [FK_PeliculasSalasDeCines_Peliculas_PeliculaId] FOREIGN KEY ([PeliculaId]) REFERENCES [Peliculas] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_PeliculasSalasDeCines_SalasDeCine_SalaDeCineId] FOREIGN KEY ([SalaDeCineId]) REFERENCES [SalasDeCine] ([Id]) ON DELETE CASCADE
);
GO

CREATE INDEX [IX_PeliculasSalasDeCines_SalaDeCineId] ON [PeliculasSalasDeCines] ([SalaDeCineId]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231206204147_TablasSalasCine', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [SalasDeCine] ADD [Ubicacion] geography NULL;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231206220633_TablasSalasPoint', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231207001630_SaladeCinaData', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'FechaNacimiento', N'Foto', N'Nombre') AND [object_id] = OBJECT_ID(N'[Actores]'))
    SET IDENTITY_INSERT [Actores] ON;
INSERT INTO [Actores] ([Id], [FechaNacimiento], [Foto], [Nombre])
VALUES (5, '1962-01-17T00:00:00.0000000', NULL, N'Jim Carrey'),
(6, '1965-04-04T00:00:00.0000000', NULL, N'Robert Downey Jr.'),
(7, '1981-06-13T00:00:00.0000000', NULL, N'Chris Evans');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'FechaNacimiento', N'Foto', N'Nombre') AND [object_id] = OBJECT_ID(N'[Actores]'))
    SET IDENTITY_INSERT [Actores] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Nombre') AND [object_id] = OBJECT_ID(N'[Generos]'))
    SET IDENTITY_INSERT [Generos] ON;
INSERT INTO [Generos] ([Id], [Nombre])
VALUES (4, N'Aventura'),
(5, N'Animación'),
(6, N'Suspenso'),
(7, N'Romance');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Nombre') AND [object_id] = OBJECT_ID(N'[Generos]'))
    SET IDENTITY_INSERT [Generos] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'EnCines', N'FechaEstreno', N'Poster', N'Titulo') AND [object_id] = OBJECT_ID(N'[Peliculas]'))
    SET IDENTITY_INSERT [Peliculas] ON;
INSERT INTO [Peliculas] ([Id], [EnCines], [FechaEstreno], [Poster], [Titulo])
VALUES (2, CAST(1 AS bit), '2019-04-26T00:00:00.0000000', NULL, N'Avengers: Endgame'),
(3, CAST(0 AS bit), '2019-04-26T00:00:00.0000000', NULL, N'Avengers: Infinity Wars'),
(4, CAST(0 AS bit), '2020-02-28T00:00:00.0000000', NULL, N'Sonic the Hedgehog'),
(5, CAST(0 AS bit), '2020-02-21T00:00:00.0000000', NULL, N'Emma'),
(6, CAST(0 AS bit), '2020-08-14T00:00:00.0000000', NULL, N'Wonder Woman 1984');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'EnCines', N'FechaEstreno', N'Poster', N'Titulo') AND [object_id] = OBJECT_ID(N'[Peliculas]'))
    SET IDENTITY_INSERT [Peliculas] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Nombre', N'Ubicacion') AND [object_id] = OBJECT_ID(N'[SalasDeCine]'))
    SET IDENTITY_INSERT [SalasDeCine] ON;
INSERT INTO [SalasDeCine] ([Id], [Nombre], [Ubicacion])
VALUES (4, N'Sambil', geography::Parse('POINT (-69.9118804 18.4826214)')),
(5, N'Megacentro', geography::Parse('POINT (-69.856427 18.506934)')),
(6, N'Village East Cinema', geography::Parse('POINT (-73.986227 40.730898)'));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Nombre', N'Ubicacion') AND [object_id] = OBJECT_ID(N'[SalasDeCine]'))
    SET IDENTITY_INSERT [SalasDeCine] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ActorId', N'PeliculaId', N'Orden', N'Personaje') AND [object_id] = OBJECT_ID(N'[PeliculasActores]'))
    SET IDENTITY_INSERT [PeliculasActores] ON;
INSERT INTO [PeliculasActores] ([ActorId], [PeliculaId], [Orden], [Personaje])
VALUES (5, 4, 1, N'Dr. Ivo Robotnik'),
(6, 2, 1, N'Tony Stark'),
(6, 3, 1, N'Tony Stark'),
(7, 2, 2, N'Steve Rogers'),
(7, 3, 2, N'Steve Rogers');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ActorId', N'PeliculaId', N'Orden', N'Personaje') AND [object_id] = OBJECT_ID(N'[PeliculasActores]'))
    SET IDENTITY_INSERT [PeliculasActores] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'GeneroId', N'PeliculaId') AND [object_id] = OBJECT_ID(N'[PeliculasGeneros]'))
    SET IDENTITY_INSERT [PeliculasGeneros] ON;
INSERT INTO [PeliculasGeneros] ([GeneroId], [PeliculaId])
VALUES (4, 2),
(4, 3),
(4, 4),
(4, 6),
(6, 2),
(6, 3),
(6, 5),
(6, 6),
(7, 5);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'GeneroId', N'PeliculaId') AND [object_id] = OBJECT_ID(N'[PeliculasGeneros]'))
    SET IDENTITY_INSERT [PeliculasGeneros] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231207002143_SaladeCinaData1', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
GO

CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
GO

CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
GO

CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
GO

CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
GO

CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
GO

CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
GO

CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20231207155116_TablasIdentity', N'6.0.25');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'9aae0b6d-d50c-4d0a-9b90-2a6873e3845d', N'9f9412a3-8815-435c-acee-190e190f9375', N'Admin', N'Admin');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'ConcurrencyStamp', N'Email', N'EmailConfirmed', N'LockoutEnabled', N'LockoutEnd', N'NormalizedEmail', N'NormalizedUserName', N'PasswordHash', N'PhoneNumber', N'PhoneNumberConfirmed', N'SecurityStamp', N'TwoFactorEnabled', N'UserName') AND [object_id] = OBJECT_ID(N'[AspNetUsers]'))
    SET IDENTITY_INSERT [AspNetUsers] ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (N'5673b8cf-12de-44f6-92ad-fae4a77932ad', 0, N'f0d5b626-9b22-412b-a41d-8e80470c47bd', N'wincajaadmin@hotmail.com', CAST(0 AS bit), CAST(0 AS bit), NULL, N'wincajaadmin@hotmail.com', N'wincajaadmin@hotmail.com', N'AQAAAAEAACcQAAAAEPXeBstYBJiMUtx6HM0oA42jrKGaLbFv2wpA1RqcG13lv3SxXZ6HCy1+eT1M2dYoKQ==', NULL, CAST(0 AS bit), N'61f8794b-21f5-4366-a24a-aa3cd1dfe878', CAST(0 AS bit), N'wincajaadmin@hotmail.com');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'ConcurrencyStamp', N'Email', N'EmailConfirmed', N'LockoutEnabled', N'LockoutEnd', N'NormalizedEmail', N'NormalizedUserName', N'PasswordHash', N'PhoneNumber', N'PhoneNumberConfirmed', N'SecurityStamp', N'TwoFactorEnabled', N'UserName') AND [object_id] = OBJECT_ID(N'[AspNetUsers]'))
    SET IDENTITY_INSERT [AspNetUsers] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ClaimType', N'ClaimValue', N'UserId') AND [object_id] = OBJECT_ID(N'[AspNetUserClaims]'))
    SET IDENTITY_INSERT [AspNetUserClaims] ON;
INSERT INTO [AspNetUserClaims] ([Id], [ClaimType], [ClaimValue], [UserId])
VALUES (1, N'http://schemas.microsoft.com/ws/2008/06/identity/claims/role', N'Admin', N'5673b8cf-12de-44f6-92ad-fae4a77932ad');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ClaimType', N'ClaimValue', N'UserId') AND [object_id] = OBJECT_ID(N'[AspNetUserClaims]'))
    SET IDENTITY_INSERT [AspNetUserClaims] OFF;
GO



